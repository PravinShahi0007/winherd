{
   14/04/12 [V5.0 R4.9] /MK Additional Feature - Favourite Button Added.
}

unit uDueToBeCulled;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  uReportsBaseForm, QRCtrls, Db, DBTables, QRExport, QuickRpt, StdCtrls,
  ComCtrls, ExtCtrls, Mask, ToolEdit, RxLookup, RXCtrls, ToolWin,
  cxControls, cxContainer, cxEdit, cxCheckBox;

type
  TfmDueToBeCulled = class(TReportsBaseForm)
    QRLabel1: TQRLabel;
    QRLabel2: TQRLabel;
    QRLabel3: TQRLabel;
    QRLabel4: TQRLabel;
    QRDBText1: TQRDBText;
    QRDBText2: TQRDBText;
    QRDBText3: TQRDBText;
    QRDBText4: TQRDBText;
    QRLabel5: TQRLabel;
    QRDBText5: TQRDBText;
    QRLabel6: TQRLabel;
    QRDBText6: TQRDBText;
    cbFavourite: TcxCheckBox;
    procedure sbViewClick(Sender: TObject);
    procedure sbPrintClick(Sender: TObject);
    procedure cbUseFilterClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure sbViewMouseLeave(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure cbFavouritePropertiesChange(Sender: TObject);
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    procedure BuildSQL;
    procedure Preview(const AToScreen : Boolean = True);
  protected
    procedure SetupForm;override;
  public
    { Public declarations }
  end;

  procedure ShowForm;

var
  fmDueToBeCulled: TfmDueToBeCulled;

implementation
uses
   DairyData, GenTypesConst, kDbRoutines;

{$R *.DFM}

  procedure ShowForm;
  begin
     Application.CreateForm(TfmDueToBeCulled, fmDueToBeCulled);
     try
        fmDueToBeCulled.ShowModal ;
     finally
        FreeAndNil(fmDueToBeCulled);
     end;
  end;

procedure TfmDueToBeCulled.Preview(const AToScreen: Boolean);
begin
  EnableViewPrintButtons(False);
  try
     BuildSQL;
     qrlSortBy.Caption := SortByField;
     qrlSortOrder.Caption := SortByOrder;
     qrlHerdIdentity.Caption := cbHerdIdentity.Text;
     GenQuery.Open;
     try
         if AToScreen then
            BaseReport.Preview
         else
            BaseReport.Print;
     finally
        GenQuery.Close;
     end;
  finally
     EnableViewPrintButtons(True);
  end;


end;

procedure TfmDueToBeCulled.sbViewClick(Sender: TObject);
begin
  inherited;
  WinData.CanShowStandardReportHint := False;
  WinData.cxHint.HideHint;
  Preview();
  EnableViewPrintButtons(True);
end;

procedure TfmDueToBeCulled.sbPrintClick(Sender: TObject);
begin
  inherited;
  Preview(False);
end;

procedure TfmDueToBeCulled.BuildSQL;
var
  SortField, SortOrder : String;
begin

   case rgSortBy.ItemIndex of
      0 : SortField := 'SortAnimalNo';
      1 : SortField := 'SortNatID';
      2 : SortField := 'DateOfBirth';
   end;

   if rgSortOrder.ItemIndex = 0 then
      SortOrder := 'ASC'
   else
      SortOrder := 'DESC';
      
   with GenQuery do
      begin
         SQL.Clear;
         SQL.Add('Select A.ID, A.AnimalNo, A.SortAnimalNo, A.NatIdNum, A.SortNatID,');
         SQL.Add('A.DateOfBirth, A.LactNo, E.EventDate, E.EventDesc From Animals A');
         SQL.Add('Left Join Events E On (E.AnimalID=A.ID)');
         SQL.Add('Where (E.EventType = :EType)');
         SQL.Add('And (A.InHerd=True)');
         SQL.Add('And (A.AnimalDeleted = False)');
         SQL.Add('And (A.HerdID=:AHerdID)');
         SQL.Add('And (E.EventDate Between :AFromDate AND :AToDate)');
         SQL.Add('Order By '+SortField+ ' ' + SortOrder);
         Params[0].AsInteger := CToBeCulledEvent;
         Params[1].AsInteger := HerdID;
         Params[2].AsDateTime := FromDate.Date;
         Params[3].AsDateTime := ToDate.Date;
      end;
end;

procedure TfmDueToBeCulled.cbUseFilterClick(Sender: TObject);
begin
  inherited;
//
end;

procedure TfmDueToBeCulled.FormActivate(Sender: TObject);
var
   pt : TPoint;
begin
   // 05/05/10 [V4.0 R3.5] /MK Additional Feature - Added Hint to View
   if WinData.CanShowStandardReportHint then
      begin
         WinData.CallHintStyle;
         pt.x := 0;
         pt.y := 0;
         pt := sbView.ClientToScreen(pt);
         WinData.cxHint.ShowHint( pt.x , pt.y , 'View Report', 'Click here to view standard report');
      end;
end;

procedure TfmDueToBeCulled.sbViewMouseLeave(Sender: TObject);
begin
   WinData.cxHint.HideHint;
end;

procedure TfmDueToBeCulled.FormCreate(Sender: TObject);
begin
  inherited;
  WinData.CanShowStandardReportHint := True;
end;

procedure TfmDueToBeCulled.SetupForm;
begin
  inherited;
  FromDate.Date := IncMonth(Date, -12); // default 1 year back
end;

//   14/04/12 [V5.0 R4.9] /MK Additional Feature - Favourite Button Added.
procedure TfmDueToBeCulled.cbFavouritePropertiesChange(Sender: TObject);
begin
   inherited;
   if cbFavourite.Checked then
      begin
         WinData.SetReportAsFavourite(cDueToBeCullRep,True);
         cbFavourite.Style.TextColor := clBlue;
         cbFavourite.StyleHot.TextColor := clBlue;
      end
   else
      begin
         WinData.SetReportAsFavourite(cDueToBeCullRep,False);
         cbFavourite.Style.TextColor := clBlack;
         cbFavourite.StyleHot.TextColor := clBlack;
      end;
   Application.ProcessMessages;
   Update;
end;

//   14/04/12 [V5.0 R4.9] /MK Additional Feature - Favourite Button Added.
procedure TfmDueToBeCulled.FormShow(Sender: TObject);
begin
   inherited;
   cbFavourite.Checked := WinData.IsReportFavourite(cDueToBeCullRep);
   WinData.UpdateRecentReportUsage(cDueToBeCullRep);
end;

end.
