unit uAPHISWSCredentials;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs,
  StdCtrls, cxButtons, cxLabel, cxTextEdit, cxControls, cxContainer,
  cxEdit, cxGroupBox, uAPHISLoginData;

type
  TfmAPHISWSCredentials = class(TForm)
    gbAPHISCredentials: TcxGroupBox;
    tbGatewayId: TcxTextEdit;
    tbPassword: TcxTextEdit;
    cxLabel1: TcxLabel;
    cxLabel2: TcxLabel;
    tbCustomerId: TcxTextEdit;
    cxLabel3: TcxLabel;
    btnSave: TcxButton;
    btnCancel: TcxButton;
    procedure FormCreate(Sender: TObject);
    procedure FormCloseQuery(Sender: TObject; var CanClose: Boolean);
    procedure FormDestroy(Sender: TObject);
  private
    { Private declarations }
    FAPHISLoginData : TAPHISLoginData;
    FUserChange : Boolean;
  public
    { Public declarations }
    class procedure ShowAPHISWSCredentials;
  end;

var
  fmAPHISWSCredentials: TfmAPHISWSCredentials;

implementation
uses
   DCPCryptManagement;

{$R *.DFM}

procedure TfmAPHISWSCredentials.FormCreate(Sender: TObject);
begin
   FAPHISLoginData := TAPHISLoginData.create;
   tbGatewayId.Text := FAPHISLoginData.GatewayId;
   tbCustomerId.Text := FAPHISLoginData.BusinessId;
   tbPassword.Text := FAPHISLoginData.Password;
   FUserChange := False;
end;

procedure TfmAPHISWSCredentials.FormCloseQuery(Sender: TObject;
  var CanClose: Boolean);
begin
   if Modalresult = mrOK then
      begin
         FUserChange := ( tbGatewayId.EditModified ) or ( tbPassword.EditModified) or (tbCustomerId.EditModified);
         if ( FUserChange ) and ( MessageDlg('Save changes to file?',mtConfirmation,[mbYes,mbNo],0) = idYes ) then
            begin
               FUserChange := false;

               FAPHISLoginData.GatewayId := tbGatewayId.Text;
               FAPHISLoginData.BusinessId := tbCustomerId.Text;
               FAPHISLoginData.Password := tbPassword.Text;
            end
         else
            CanClose := false;
      end;
end;

procedure TfmAPHISWSCredentials.FormDestroy(Sender: TObject);
begin
   FreeAndNil(FAPHISLoginData);
end;

class procedure TfmAPHISWSCredentials.ShowAPHISWSCredentials;
begin

   with TfmAPHISWSCredentials.Create(nil) do
      try
         ShowModal;
      finally
         Free;
      end;
end;

end.
