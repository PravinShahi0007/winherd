{
   08/01/20 [V5.9 R1.6] /MK Change - Added a Bull Name (Short) where the country is not Ireland - TGM request.
                                   - Had to modify the screen height, width and control positions for this change.
}

unit uAddSire;

interface

uses
  Windows, Messages, SysUtils, Classes, Graphics, Controls, Forms, Dialogs, EventRecording,
  db, dbTables, StdCtrls, cxButtons, uHerdLookup, cxLabel, cxControls,
  cxContainer, cxEdit, cxTextEdit, cxMaskEdit, cxDropDownEdit,
  cxLookupEdit, cxDBLookupEdit, cxDBLookupComboBox, SQLHelper, GenTypesConst;

type
  TSireType = (stAISire, stNonHerdSire);
  TfmAddSire = class(TForm)
    btnSave: TcxButton;
    btnCancel: TcxButton;
    teSireCode: TcxTextEdit;
    lSireCode: TcxLabel;
    cmboBreed: TcxLookupComboBox;
    lBreed: TcxLabel;
    lName: TcxLabel;
    teName: TcxTextEdit;
    lShortName: TcxLabel;
    teShortName: TcxTextEdit;
    procedure btnSaveClick(Sender: TObject);
    procedure btnCancelClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure cmboBreedPropertiesChange(Sender: TObject);
    procedure teSireCodeKeyPress(Sender: TObject; var Key: Char);
    procedure FormCreate(Sender: TObject);
    procedure FormDestroy(Sender: TObject);
  private
    { Private declarations }
    FCountry : TCountry;
    FSireType : TSireType;
    procedure ClearDetails;
  public
    { Public declarations }
    class procedure ShowTheForm (ASireType : TSireType);
  end;

var
  fmAddSire: TfmAddSire;

const
  cPedFormHeight = 252;
  cDefFormHeight = 205;

implementation

{$R *.DFM}

class procedure TfmAddSire.ShowTheForm(ASireType: TSireType);
begin
   with TfmAddSire.Create(nil) do
      try
         FSireType := ASireType;
         ShowModal;
      finally
         Free;
      end;
end;

procedure TfmAddSire.FormCreate(Sender: TObject);
begin
   HerdLookup.CreateMDPureBredBreedData;
   FCountry := HerdLookup.CountryByHerdID(HerdLookup.DefaultHerdID);
end;

procedure TfmAddSire.FormActivate(Sender: TObject);
var
   i : Integer;
begin
   case FSireType of
      stAISire : begin
                    lSireCode.Caption := 'AI Code : ';
                    lSireCode.Enabled := True;
                    if ( FCountry = Ireland ) then
                       begin
                          lSireCode.Top := 20;
                          lSireCode.Left := 22;
                          teSireCode.Top := 20;
                          teSireCode.Left := 112;
                          lBreed.Top := 66;
                          lBreed.Left := 22;
                          cmboBreed.Top := 66;
                          cmboBreed.Left := 112;
                          lName.Top := 112;
                          lName.Left := 22;
                          teName.Top := 112;
                          teName.Left := 112;
                       end
                    else
                       begin
                          lShortName.Top := 20;
                          lShortName.Left := 22;
                          teShortName.Top := 20;
                          teShortName.Left := 170;
                          lSireCode.Top := 66;
                          lSireCode.Left := 78;
                          teSireCode.Top := 66;
                          teSireCode.Left := 170;
                          lBreed.Top := 112;
                          lBreed.Left := 78;
                          cmboBreed.Top := 112;
                          cmboBreed.Left := 170;
                          lName.Top := 156;
                          lName.Left := 78;
                          teName.Top := 156;
                          teName.Left := 170;
                       end;
                    teSireCode.Enabled := True;
                    teSireCode.Width := 140;
                    Caption := 'AI Sire Manual Entry';
                 end;
      stNonHerdSire : begin
                         lSireCode.Top := 74;
                         lSireCode.Left := 22;
                         teSireCode.Top := 74;
                         teSireCode.Left := 112;
                         lBreed.Top := 28;
                         lBreed.Left := 22;
                         cmboBreed.Top := 28;
                         cmboBreed.Left := 112;
                         lSireCode.Caption := 'Code : ';
                         lSireCode.Enabled := False;
                         teSireCode.Enabled := False;
                         teSireCode.Width := cmboBreed.Width;
                         Caption := 'Non-Herd Stock Sire';
                      end;
   end;

   Height := 238;

   lName.Visible := ( FSireType = stAISire ) and ( Length(HerdLookup.PedigreePrefixByHerdId(HerdLookup.DefaultHerdID)) > 1 );
   teName.Visible := lName.Visible;
   lShortName.Visible := ( FSireType = stAISire ) and ( FCountry <> Ireland );
   teShortName.Visible := lShortName.Visible;
   if lName.Visible then
      begin
         if ( FCountry = Ireland ) then
            Height := cPedFormHeight
         else
            Height := 284;
      end
   else
      if ( FCountry = Ireland ) then
         Height := cDefFormHeight
      else
         begin
            if ( FSireType = stAISire ) then
               Height := 236
            else
               Height := cDefFormHeight;
         end;

   if ( FSireType = stAISire ) then
      begin
         if FCountry = Ireland then
            begin
               if ( lName.Visible ) then
                  Width := 348
               else
                  Width := 328;
            end
         else
            Width := 399;
      end
   else
      Width := 254;

end;

procedure TfmAddSire.btnSaveClick(Sender: TObject);
var
   AnimalID : Integer;
   AISire : TAnimalRecord;

   function AnimalInUse(const AAICode : String): Integer;
   begin
      Result := 0;
      if ( Length(AAICode) = 0 ) then Exit;
      with TQuery.Create(nil) do
         try
            DatabaseName := AliasName;
            SQL.Clear;
            SQL.Add( InsertSELECT(['ID']));
            SQL.Add( InsertFROM(['Animals']));
            SQL.Add( InsertWHERE(['AnimalNo'],[':AnimalNo']));
            Params[0].AsString := AAICode;
            Open;
            try
               First;
               Result := Fields[0].AsInteger;
            finally
               Close;
            end;
         finally
            Free;
         end;
   end;

   function SireExtRecCreated ( ABullID : Integer ) : Boolean;
   begin
      Result := False;
      if ( ABullID = 0 ) then Exit;
      with TQuery.Create(nil) do
         try
            DatabaseName := AliasName;
            SQL.Clear;
            SQL.Add('INSERT INTO BullExt (AnimalID)');
            SQL.Add('VALUES (:AnimalID)');
            Params[0].AsInteger := ABullID;
            ExecSQL;
            Result := True;
         finally
            Free;
         end;
   end;

begin
   inherited;
   teSireCode.PostEditValue;
   if ( Length(teSireCode.Text) = 0 ) and ( FSireType = stAISire ) then
      begin
         MessageDlg('You must enter an AI Code.',mtError,[mbOK],0);
         Abort;
      end;
   if ( FSireType = stAISire ) then
      if ( FCountry = Ireland ) then
         if ( not(HerdLookup.IsValidAICode(teSireCode.Text)) ) then
            begin
               MessageDlg('Invalid AI Code Entered',mtError,[mbOK],0);
               Exit;
            end;
   cmboBreed.PostEditValue;
   if ( Length(cmboBreed.Text) = 0 ) then
      begin
         MessageDlg('You must enter a breed.',mtError,[mbOK],0);
         Abort;
      end;
   teName.PostEditValue;
   AnimalID := AnimalInUse(teSireCode.Text);
   if ( AnimalID <= 0 ) then
      begin
         // Add animal to database
         AISire := TAnimalRecord.Create;
         AISire.CreateBullSemenStkRecord := True;
         try
            AISire.RaiseExceptions := False;

            AISire.AddToNoneHerd;
            if ( FCountry = Ireland ) then
               AISire.AnimalNo := teSireCode.Text
            else
               AISire.AnimalNo := teShortName.Text;
            AISire.Sex := cSex_Bull;
            AISire.Name := teName.Text;
            AISire.LactNo := 0;
            AISire.InHerd := True;
            AISire.Breeding := True;
            AISire.DamID  := 0;
            AISire.SireID := 0;
            AISire.AnimalDeleted := False;

            if ( FCountry <> Ireland ) then
               AISire.UKAISireCode := teSireCode.Text;

            AISire.Pedigree := True;

            AISire.PrimaryBreed := cmboBreed.EditValue;
            if not AISire.Save then
               AISire.Cancel
            else
               begin
                  // Add BullSemenStk Record
                  if ( not(SireExtRecCreated(AISire.ID)) ) then
                     MessageDlg('Unable to create the sires extension table record. Contact Kingswood',mtInformation,[mbOK],0)
                  else
                     begin
                        if ( MessageDlg(Format('Sire "%s" has been added to the database.'+cCRLF+
                                       'Do you want to add another sire?',[teSireCode.Text]),mtConfirmation,[mbYes,mbNo],0) = mrYes ) then
                           ClearDetails
                        else
                           Close;
                     end;
               end;
         finally
            FreeAndNil(AISire);
         end;
      end
   else
      MessageDlg(Format('Sire "%s" already exists.',[teSireCode.Text]),mtInformation,[mbOK],0);
end;

procedure TfmAddSire.btnCancelClick(Sender: TObject);
begin
   teSireCode.PostEditValue;
   cmboBreed.PostEditValue;
   teName.PostEditValue;
   if ( ((FSireType = stAISire) and ((Length(teSireCode.Text) > 0) or (Length(teName.Text) > 0))) or
        (cmboBreed.EditValue <> Null) ) then
      begin
         if ( MessageDlg('Unsaved changes, exit anyway?',mtConfirmation,[mbYes,mbNo],0) = mrYes ) then
            Close;
      end
   else
      Close;
end;

procedure TfmAddSire.ClearDetails;
begin
   teSireCode.Text := '';
   teSireCode.PostEditValue;
   cmboBreed.EditValue := Null;
   cmboBreed.PostEditValue;
end;

procedure TfmAddSire.cmboBreedPropertiesChange(Sender: TObject);
begin
   if ( FSireType = stNonHerdSire ) then
      teSireCode.Text := cmboBreed.Text;
end;

procedure TfmAddSire.teSireCodeKeyPress(Sender: TObject; var Key: Char);
begin
   if ( not(Key in [#8, '0'..'9']) ) and ( not(Key in ['a'..'z'] + ['A'..'Z']) ) then
      Key := #0;
end;

procedure TfmAddSire.FormDestroy(Sender: TObject);
begin
   HerdLookup.mdPureBredBreeds.Close;
end;

end.
